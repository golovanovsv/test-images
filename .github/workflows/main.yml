name: images
on:
  schedule:
  - cron: "31 2 * * 2"
  push:
    branches:
    - master
jobs:
  ubuntu-1804:
    env:
      VERSION: "18.04"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build 
      run: docker build --pull --build-arg VERSION=$VERSION -f ubuntu-systemd.dockerfile -t golovanovsv/ubuntu:$VERSION-systemd .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/ubuntu:$VERSION-systemd
  ubuntu-2004:
    env:
      VERSION: "20.04"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build 
      run: docker build --pull --build-arg VERSION=$VERSION -f ubuntu-systemd.dockerfile -t golovanovsv/ubuntu:$VERSION-systemd .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/ubuntu:$VERSION-systemd
  ubuntu-2204:
    env:
      VERSION: "22.04"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build 
      run: docker build --pull --build-arg VERSION=$VERSION -f ubuntu-systemd.dockerfile -t golovanovsv/ubuntu:$VERSION-systemd .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/ubuntu:$VERSION-systemd
  debian-9:
    env:
      VERSION: "stretch"
      NVERSION: "9"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build 
      run: docker build --pull --build-arg VERSION=$VERSION -f debian-systemd.dockerfile -t golovanovsv/debian:$NVERSION-systemd .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/debian:$NVERSION-systemd
  debian-10:
    env:
      VERSION: "buster"
      NVERSION: "10"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build 
      run: docker build --pull --build-arg VERSION=$VERSION -f debian-systemd.dockerfile -t golovanovsv/debian:$NVERSION-systemd .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/debian:$NVERSION-systemd
  debian-11:
    env:
      VERSION: "bullseye"
      NVERSION: "11"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build 
      run: docker build --pull --build-arg VERSION=$VERSION -f debian-systemd.dockerfile -t golovanovsv/debian:$NVERSION-systemd .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/debian:$NVERSION-systemd
  amazon-linux2:
    env:
      VERSION: "2"
      NVERSION: "2"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: docker build --pull --build-arg VERSION=$VERSION -f amazon2-systemd.dockerfile -t golovanovsv/amazon:$NVERSION-systemd .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/amazon:$NVERSION-systemd
  oraclelinux-6:
    env:
      VERSION: "6"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build 
      run: docker build --pull --build-arg VERSION=$VERSION -f oraclelinux.dockerfile -t golovanovsv/oraclelinux:$VERSION .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/oraclelinux:$VERSION
  oraclelinux-7:
    env:
      VERSION: "7"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build 
      run: docker build --pull --build-arg VERSION=$VERSION -f oraclelinux-systemd.dockerfile -t golovanovsv/oraclelinux:$VERSION-systemd .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/oraclelinux:$VERSION-systemd
  oraclelinux-8:
    env:
      VERSION: "8"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build 
      run: docker build --pull --build-arg VERSION=$VERSION -f oraclelinux-systemd.dockerfile -t golovanovsv/oraclelinux:$VERSION-systemd .
    - name: login to docker hub
      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u ${{ secrets.DHUB_USERNAME }} --password-stdin
    - name: push
      run: docker push golovanovsv/oraclelinux:$VERSION-systemd
